services:
  postiz-application.application:
    container_name: postiz-application.application
    image: webgrip/postiz-application:latest
    pull_policy: never
    build:
      context: .
      dockerfile: ops/docker/application/Dockerfile
    restart: always
    env_file:
      - .env
    environment:
      MAIN_URL: ${MAIN_URL:-http://localhost:4200}
      DATABASE_URL: "postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}"
      REDIS_URL: "redis://${REDIS_HOST}:${REDIS_PORT}"
      DISABLE_REGISTRATION: "false"

      EMAIL_FROM_ADDRESS: ${EMAIL_FROM_ADDRESS:-}
      EMAIL_FROM_NAME: ${EMAIL_FROM_NAME:-}

      X_API_KEY: ${X_API_KEY:-}
      X_API_SECRET: ${X_API_SECRET:-}
      LINKEDIN_CLIENT_ID: ${LINKEDIN_CLIENT_ID:-}
      LINKEDIN_CLIENT_SECRET: ${LINKEDIN_CLIENT_SECRET:-}
      REDDIT_CLIENT_ID: ${REDDIT_CLIENT_ID:-}
      REDDIT_CLIENT_SECRET: ${REDDIT_CLIENT_SECRET:-}
      YOUTUBE_CLIENT_ID: ${YOUTUBE_CLIENT_ID:-}
      YOUTUBE_CLIENT_SECRET: ${YOUTUBE_CLIENT_SECRET:-}
      DISCORD_CLIENT_ID: ${DISCORD_CLIENT_ID:-}
      DISCORD_CLIENT_SECRET: ${DISCORD_CLIENT_SECRET:-}
      DISCORD_BOT_TOKEN_ID: ${DISCORD_BOT_TOKEN_ID:-}
      SLACK_ID: ${SLACK_ID:-}
      SLACK_SECRET: ${SLACK_SECRET:-}
      SLACK_SIGNING_SECRET: ${SLACK_SIGNING_SECRET:-}
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}

    volumes:
      - postiz-application-config:/config/
      - postiz-application-uploads:/uploads/
    ports:
      - "127.0.0.1:4200:4200"
      - "127.0.0.1:3000:3000"
    depends_on:
      postiz-application.postgres:
        condition: service_healthy
      postiz-application.redis:
        condition: service_healthy

  postiz-application.postgres:
    image: postgres:17-alpine
    container_name: postiz-application.postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postiz-application-postgres-volume:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U ${DB_USER} -d ${DB_NAME}
      interval: 10s
      timeout: 3s
      retries: 3

  postiz-application.redis:
    image: redis:7.2
    container_name: postiz-application.redis
    restart: always
    healthcheck:
      test: redis-cli ping
      interval: 10s
      timeout: 3s
      retries: 3
    volumes:
      - postiz-application-redis-data:/data

volumes:
  postiz-application-postgres-volume:
    external: false

  postiz-application-redis-data:
    external: false

  postiz-application-config:
    external: false

  postiz-application-uploads:
    external: false

networks:
  default:
    external: true
    name: webgrip
