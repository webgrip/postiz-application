# Configuration for Postiz application using official Helm chart
# Based on: https://github.com/gitroomhq/postiz-helmchart

postiz-app:
  replicaCount: 1

  image:
    repository: ghcr.io/gitroomhq/postiz-app
    pullPolicy: IfNotPresent
    tag: "latest"

  service:
    type: ClusterIP
    port: 80

  ingress:
    enabled: true
    className: "nginx"
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
    hosts:
      - host: postiz.example.com  # REQUIRED: Update with your domain
        paths:
          - path: /
            pathType: Prefix
            port: 80
    tls:
      - secretName: postiz-tls
        hosts:
          - postiz.example.com  # REQUIRED: Update with your domain

  # PostgreSQL configuration
  postgresql:
    enabled: true
    auth:
      username: postiz
      password: postiz-password  # REQUIRED: Change in production
      database: postiz
    primary:
      persistence:
        enabled: true
        size: 8Gi
        storageClass: ""  # REQUIRED: Set your storage class

  # Redis configuration
  redis:
    enabled: true
    auth:
      password: postiz-redis-password  # REQUIRED: Change in production
    master:
      persistence:
        enabled: true
        size: 8Gi
        storageClass: ""  # REQUIRED: Set your storage class

  # Environment variables
  env:
    FRONTEND_URL: "https://postiz.example.com"  # REQUIRED: Update with your domain
    NEXT_PUBLIC_BACKEND_URL: "https://postiz.example.com/api"  # REQUIRED: Update with your domain
    BACKEND_INTERNAL_URL: "http://localhost:3000"
    IS_GENERAL: "true"
    DISABLE_REGISTRATION: "false"

  # Sensitive environment variables (stored in Kubernetes Secrets)
  secrets:
    # Database connection
    DATABASE_URL: "postgresql://postiz:postiz-password@postiz-deployment-postiz-app-postgresql:5432/postiz"
    
    # Redis connection
    REDIS_URL: "redis://:postiz-redis-password@postiz-deployment-postiz-app-redis-master:6379"
    
    # JWT secret for authentication (REQUIRED: Generate a secure random string)
    JWT_SECRET: ""  # REQUIRED: Set a secure JWT secret
    
    # Social media API keys (optional but recommended)
    X_API_KEY: ""
    X_API_SECRET: ""
    LINKEDIN_CLIENT_ID: ""
    LINKEDIN_CLIENT_SECRET: ""
    REDDIT_CLIENT_ID: ""
    REDDIT_CLIENT_SECRET: ""
    GITHUB_CLIENT_ID: ""
    GITHUB_CLIENT_SECRET: ""
    
    # Email configuration (optional)
    RESEND_API_KEY: ""
    
    # Cloud storage configuration (optional)
    CLOUDFLARE_ACCOUNT_ID: ""
    CLOUDFLARE_ACCESS_KEY: ""
    CLOUDFLARE_SECRET_ACCESS_KEY: ""
    CLOUDFLARE_BUCKETNAME: ""
    CLOUDFLARE_BUCKET_URL: ""

  resources:
    limits:
      cpu: 1000m
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 512Mi

  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 3
    targetCPUUtilizationPercentage: 80

  nodeSelector: {}
  tolerations: []
  affinity: {}