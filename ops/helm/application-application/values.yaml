namespace: postiz-application

_shared_config:
  hostname: &hostname postiz-application.staging.k8s.webgrip.nl
  url: &url https://postiz-application.staging.k8s.webgrip.nl

application:
  enabled: true

  controllers:
    main:
      type: deployment
      
      pod:
        securityContext:
          runAsNonRoot: true
          runAsUser: 1500
          runAsGroup: 1500
          fsGroup: 1500
          fsGroupChangePolicy: OnRootMismatch
          seccompProfile:
            type: RuntimeDefault

      containers:
        app:
          image:
            repository: webgrip/postiz-application
            tag: "latest"
            pullPolicy: Always
          
          securityContext:
            runAsUser: 1500
            runAsGroup: 1500
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            capabilities:
              drop:
                - ALL

          env:
            MAIN_URL: *url
            FRONTEND_URL: *url
            NEXT_PUBLIC_BACKEND_URL: "$(MAIN_URL)/api"
            BACKEND_INTERNAL_URL: "http://localhost:3000"
            IS_GENERAL: "true"
            DISABLE_REGISTRATION: "false"
            
            # Database settings
            DB_HOST: postiz-application-postgresql
            DB_PORT: "5432"
            DB_DATABASE: postiz
            DB_USERNAME: postiz
            
            # Storage settings
            STORAGE_PROVIDER: "local"
            UPLOAD_DIRECTORY: "/uploads"
            NEXT_PUBLIC_UPLOAD_DIRECTORY: "/uploads"
            
            # Other settings
            API_LIMIT: "30"
            NOT_SECURED: "false"
            NX_ADD_PLUGINS: "false"

          envFrom:
            - secretRef:
                name: postiz-application-secrets

          ports:
            - name: http
              containerPort: 5000
              protocol: TCP

          resources:
            requests:
              cpu: "250m"
              memory: "512Mi"
            limits:
              cpu: "1000m"
              memory: "1Gi"

          probes:
            liveness:
              enabled: true
              custom: true
              spec:
                httpGet:
                  path: /
                  port: 5000
                initialDelaySeconds: 30
                periodSeconds: 10
                timeoutSeconds: 5
                failureThreshold: 3
            readiness:
              enabled: true
              custom: true
              spec:
                httpGet:
                  path: /
                  port: 5000
                initialDelaySeconds: 10
                periodSeconds: 5
                timeoutSeconds: 3
                failureThreshold: 3
            startup:
              enabled: true
              custom: true
              spec:
                httpGet:
                  path: /
                  port: 5000
                initialDelaySeconds: 10
                periodSeconds: 10
                timeoutSeconds: 5
                failureThreshold: 30

  service:
    main:
      controller: main
      type: ClusterIP
      ports:
        http:
          port: 80
          targetPort: 5000
          protocol: TCP

  ingress:
    main:
      enabled: true
      className: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-production
        nginx.ingress.kubernetes.io/proxy-body-size: "100m"
        nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
        nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
      hosts:
        - host: *hostname
          paths:
            - path: /
              pathType: Prefix
              service:
                identifier: main
                port: http
      tls:
        - hosts:
            - *hostname
          secretName: postiz-application-tls

  persistence:
    config:
      enabled: true
      type: persistentVolumeClaim
      accessMode: ReadWriteOnce
      size: 1Gi
      # REQUIRED: Set to your storage class
      storageClass: ""
      globalMounts:
        - path: /config
    uploads:
      enabled: true
      type: persistentVolumeClaim
      accessMode: ReadWriteOnce
      size: 10Gi
      # REQUIRED: Set to your storage class  
      storageClass: ""
      globalMounts:
        - path: /uploads

# PostgreSQL dependency configuration
postgresql:
  enabled: true
  auth:
    database: postiz
    username: postiz
    existingSecret: postiz-application-secrets
    secretKeys:
      adminPasswordKey: postgresql-postgres-password
      userPasswordKey: postgresql-password
  
  primary:
    persistence:
      enabled: true
      size: 8Gi
      # REQUIRED: Set to your storage class
      storageClass: ""
    
    resources:
      requests:
        cpu: 250m
        memory: 256Mi
      limits:
        cpu: 1000m
        memory: 1Gi

# Redis dependency configuration  
redis:
  enabled: true
  auth:
    enabled: true
    existingSecret: postiz-application-secrets
    existingSecretPasswordKey: redis-password
  
  master:
    persistence:
      enabled: true
      size: 8Gi
      # REQUIRED: Set to your storage class
      storageClass: ""
    
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 500m
        memory: 512Mi

  replica:
    replicaCount: 1
    persistence:
      enabled: true
      size: 8Gi
      # REQUIRED: Set to your storage class
      storageClass: ""
    
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 500m
        memory: 512Mi